name: Run tests on pull requests

on:
  pull_request:
    branches: [main]

jobs:
  pr-test:
    runs-on: ubuntu-latest
    name: Testing PR
    strategy:
      matrix:
        dependency-versions: ["minimal", "default"]
    steps:
      # setup
      - name: Checkout latest version
        uses: actions/checkout@v2
      - name: Setup Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"
          architecture: x64
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.7.1
      - name: Install backend dependencies (default versions)
        run: poetry install
      - name: Downgrading backend dependencies to their minimal versions
        if: matrix.dependency-versions == 'minimal'
        run: poetry run python scripts/poetry_install_minimal.py
      - name: Setup NodeJS v18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install frontend dependencies
        run: npm install

      # backend checks
      - name: (back) Run linter and type checker tests
        run: poetry run isort . --check &&
          poetry run black . --check &&
          poetry run mypy &&
          poetry run flake8
      - name: (back) Run unit tests with coverage check
        run: |
          poetry run coverage run -m pytest tests -vv &&
          poetry run coverage report
      - name: (back) Validate JSON schema is up-to-date
        run: poetry run python scripts/models/pydantic2jsonschema.py --check
      - name: Validate requirements.txt are up to date
        run: |
          poetry export -f requirements.txt --output latest-requirements.txt
          cmp requirements.txt latest-requirements.txt

      # frontend checks
      - name: (front) Check Prettier formatting
        run: npx prettier --check frontend
      # SvelteUI doesn't work very well with svelte-check and generates a lot of false-positives that can't be ignored :(
      # - name: Run Svelte check
      #   run: npm run check
      - name: (front) Validate Typescript data model is up-to-date
        run: node scripts/models/jsonschema2ts.mjs --check
