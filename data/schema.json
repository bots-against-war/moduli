{
  "$defs": {
    "AuthType": {
      "enum": [
        "no_auth",
        "tg_group_auth"
      ],
      "title": "AuthType",
      "type": "string"
    },
    "BaseFormFieldConfig": {
      "properties": {
        "id": {
          "title": "Id",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "prompt": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "title": "Prompt"
        },
        "is_required": {
          "title": "Is Required",
          "type": "boolean"
        },
        "result_formatting": {
          "anyOf": [
            {
              "$ref": "#/$defs/FormFieldResultFormattingOpts"
            },
            {
              "const": "auto"
            },
            {
              "type": "null"
            }
          ],
          "title": "Result Formatting"
        }
      },
      "required": [
        "id",
        "name",
        "prompt",
        "is_required",
        "result_formatting"
      ],
      "title": "BaseFormFieldConfig",
      "type": "object"
    },
    "BotConfig": {
      "properties": {
        "display_name": {
          "title": "Display Name",
          "type": "string"
        },
        "token_secret_name": {
          "title": "Token Secret Name",
          "type": "string"
        },
        "user_flow_config": {
          "$ref": "#/$defs/UserFlowConfig"
        }
      },
      "required": [
        "display_name",
        "token_secret_name",
        "user_flow_config"
      ],
      "title": "BotConfig",
      "type": "object"
    },
    "BotInfo": {
      "properties": {
        "display_name": {
          "title": "Display Name",
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "title": "Created At",
          "type": "string"
        },
        "last_updated_at": {
          "format": "date-time",
          "title": "Last Updated At",
          "type": "string"
        },
        "last_run_at": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Last Run At"
        },
        "is_running": {
          "title": "Is Running",
          "type": "boolean"
        }
      },
      "required": [
        "display_name",
        "created_at",
        "last_updated_at",
        "last_run_at",
        "is_running"
      ],
      "title": "BotInfo",
      "type": "object"
    },
    "BranchingFormMemberConfig": {
      "properties": {
        "field": {
          "anyOf": [
            {
              "$ref": "#/$defs/FormFieldConfig"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "branch": {
          "anyOf": [
            {
              "$ref": "#/$defs/FormBranchConfig"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "BranchingFormMemberConfig",
      "type": "object"
    },
    "CatchAllEntryPoint": {
      "description": "Entrypoint that catches all user messages",
      "properties": {
        "entrypoint_id": {
          "title": "Entrypoint Id",
          "type": "string"
        },
        "next_block_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Next Block Id"
        }
      },
      "required": [
        "entrypoint_id",
        "next_block_id"
      ],
      "title": "CatchAllEntryPoint",
      "type": "object"
    },
    "CommandEntryPoint": {
      "description": "Basic entrypoint catching Telegram /commands",
      "properties": {
        "entrypoint_id": {
          "title": "Entrypoint Id",
          "type": "string"
        },
        "command": {
          "title": "Command",
          "type": "string"
        },
        "next_block_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Next Block Id"
        },
        "scope": {
          "allOf": [
            {
              "$ref": "#/$defs/CommandScope"
            }
          ],
          "default": "private"
        },
        "short_description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Short Description"
        }
      },
      "required": [
        "entrypoint_id",
        "command",
        "next_block_id"
      ],
      "title": "CommandEntryPoint",
      "type": "object"
    },
    "CommandScope": {
      "enum": [
        "private",
        "group",
        "any"
      ],
      "title": "CommandScope",
      "type": "string"
    },
    "Content": {
      "properties": {
        "text": {
          "anyOf": [
            {
              "$ref": "#/$defs/ContentText"
            },
            {
              "type": "null"
            }
          ]
        },
        "attachments": {
          "items": {
            "$ref": "#/$defs/ContentBlockContentAttachment"
          },
          "title": "Attachments",
          "type": "array"
        }
      },
      "required": [
        "text",
        "attachments"
      ],
      "title": "Content",
      "type": "object"
    },
    "ContentBlock": {
      "description": "Simplest user flow block: static content sent by bot in one or several telegram messages.\nImmediately continues to the next block after sending the content.",
      "properties": {
        "block_id": {
          "title": "Block Id",
          "type": "string"
        },
        "contents": {
          "items": {
            "$ref": "#/$defs/Content"
          },
          "title": "Contents",
          "type": "array"
        },
        "next_block_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Next Block Id"
        }
      },
      "required": [
        "block_id",
        "contents",
        "next_block_id"
      ],
      "title": "ContentBlock",
      "type": "object"
    },
    "ContentBlockContentAttachment": {
      "properties": {
        "image": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Image"
        }
      },
      "required": [
        "image"
      ],
      "title": "ContentBlockContentAttachment",
      "type": "object"
    },
    "ContentText": {
      "properties": {
        "text": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "title": "Text"
        },
        "markup": {
          "$ref": "#/$defs/ContentTextMarkup"
        }
      },
      "required": [
        "text",
        "markup"
      ],
      "title": "ContentText",
      "type": "object"
    },
    "ContentTextMarkup": {
      "enum": [
        "none",
        "html",
        "markdown"
      ],
      "title": "ContentTextMarkup",
      "type": "string"
    },
    "EnumOption": {
      "properties": {
        "id": {
          "title": "Id",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "title": "Label"
        }
      },
      "required": [
        "id",
        "label"
      ],
      "title": "EnumOption",
      "type": "object"
    },
    "FeedbackHandlerConfig": {
      "properties": {
        "admin_chat_id": {
          "title": "Admin Chat Id",
          "type": "integer"
        },
        "forum_topic_per_user": {
          "title": "Forum Topic Per User",
          "type": "boolean"
        },
        "anonimyze_users": {
          "title": "Anonimyze Users",
          "type": "boolean"
        },
        "max_messages_per_minute": {
          "title": "Max Messages Per Minute",
          "type": "number"
        },
        "messages_to_user": {
          "$ref": "#/$defs/MessagesToUser"
        },
        "messages_to_admin": {
          "$ref": "#/$defs/MessagesToAdmin"
        },
        "hashtags_in_admin_chat": {
          "title": "Hashtags In Admin Chat",
          "type": "boolean"
        },
        "unanswered_hashtag": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Unanswered Hashtag"
        },
        "hashtag_message_rarer_than": {
          "anyOf": [
            {
              "format": "duration",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Hashtag Message Rarer Than"
        },
        "message_log_to_admin_chat": {
          "title": "Message Log To Admin Chat",
          "type": "boolean"
        }
      },
      "required": [
        "admin_chat_id",
        "forum_topic_per_user",
        "anonimyze_users",
        "max_messages_per_minute",
        "messages_to_user",
        "messages_to_admin",
        "hashtags_in_admin_chat",
        "unanswered_hashtag",
        "hashtag_message_rarer_than",
        "message_log_to_admin_chat"
      ],
      "title": "FeedbackHandlerConfig",
      "type": "object"
    },
    "FormBlock": {
      "description": "Block with a series of questions to user with options to export their answers in various formats",
      "properties": {
        "block_id": {
          "title": "Block Id",
          "type": "string"
        },
        "form_name": {
          "title": "Form Name",
          "type": "string"
        },
        "members": {
          "items": {
            "$ref": "#/$defs/BranchingFormMemberConfig"
          },
          "title": "Members",
          "type": "array"
        },
        "messages": {
          "$ref": "#/$defs/FormMessages"
        },
        "results_export": {
          "$ref": "#/$defs/FormResultsExport"
        },
        "form_completed_next_block_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Form Completed Next Block Id"
        },
        "form_cancelled_next_block_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Form Cancelled Next Block Id"
        }
      },
      "required": [
        "block_id",
        "form_name",
        "members",
        "messages",
        "results_export",
        "form_completed_next_block_id",
        "form_cancelled_next_block_id"
      ],
      "title": "FormBlock",
      "type": "object"
    },
    "FormBranchConfig": {
      "properties": {
        "members": {
          "items": {
            "$ref": "#/$defs/BranchingFormMemberConfig"
          },
          "title": "Members",
          "type": "array"
        },
        "condition_match_value": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Condition Match Value"
        }
      },
      "required": [
        "members"
      ],
      "title": "FormBranchConfig",
      "type": "object"
    },
    "FormFieldConfig": {
      "properties": {
        "plain_text": {
          "anyOf": [
            {
              "$ref": "#/$defs/PlainTextFormFieldConfig"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "single_select": {
          "anyOf": [
            {
              "$ref": "#/$defs/SingleSelectFormFieldConfig"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "FormFieldConfig",
      "type": "object"
    },
    "FormFieldResultFormattingOpts": {
      "properties": {
        "descr": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "title": "Descr"
        },
        "is_multiline": {
          "default": false,
          "title": "Is Multiline",
          "type": "boolean"
        },
        "value_formatter": {
          "default": null,
          "title": "Value Formatter",
          "type": "null"
        }
      },
      "required": [
        "descr"
      ],
      "title": "FormFieldResultFormattingOpts",
      "type": "object"
    },
    "FormMessages": {
      "additionalProperties": false,
      "properties": {
        "form_start": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "title": "Form Start"
        },
        "cancel_command_is": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "title": "Cancel Command Is"
        },
        "field_is_skippable": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "title": "Field Is Skippable"
        },
        "field_is_not_skippable": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "title": "Field Is Not Skippable"
        },
        "please_enter_correct_value": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "title": "Please Enter Correct Value"
        },
        "unsupported_command": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "title": "Unsupported Command"
        }
      },
      "required": [
        "form_start",
        "cancel_command_is",
        "field_is_skippable",
        "field_is_not_skippable",
        "please_enter_correct_value",
        "unsupported_command"
      ],
      "title": "FormMessages",
      "type": "object"
    },
    "FormResultsExport": {
      "properties": {
        "echo_to_user": {
          "title": "Echo To User",
          "type": "boolean"
        },
        "is_anonymous": {
          "title": "Is Anonymous",
          "type": "boolean"
        },
        "to_chat": {
          "anyOf": [
            {
              "$ref": "#/$defs/FormResultsExportToChatConfig"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "echo_to_user",
        "is_anonymous",
        "to_chat"
      ],
      "title": "FormResultsExport",
      "type": "object"
    },
    "FormResultsExportToChatConfig": {
      "properties": {
        "chat_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "Chat Id"
        },
        "via_feedback_handler": {
          "title": "Via Feedback Handler",
          "type": "boolean"
        }
      },
      "required": [
        "chat_id",
        "via_feedback_handler"
      ],
      "title": "FormResultsExportToChatConfig",
      "type": "object"
    },
    "HumanOperatorBlock": {
      "description": "Terminal block that incapsulates user interaction with a human operator",
      "properties": {
        "block_id": {
          "title": "Block Id",
          "type": "string"
        },
        "catch_all": {
          "title": "Catch All",
          "type": "boolean"
        },
        "feedback_handler_config": {
          "$ref": "#/$defs/FeedbackHandlerConfig"
        }
      },
      "required": [
        "block_id",
        "catch_all",
        "feedback_handler_config"
      ],
      "title": "HumanOperatorBlock",
      "type": "object"
    },
    "LanguageData": {
      "properties": {
        "code": {
          "title": "Code",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "emoji": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Emoji"
        }
      },
      "required": [
        "code",
        "name"
      ],
      "title": "LanguageData",
      "type": "object"
    },
    "LanguageSelectBlock": {
      "description": "Language selection menu block. If specified, all texts in the containing user flow must be multilang\nand be translated to all of the supported languages. Only one such block is permitted per user flow.",
      "properties": {
        "block_id": {
          "title": "Block Id",
          "type": "string"
        },
        "menu_config": {
          "$ref": "#/$defs/LanguageSelectionMenuConfig"
        },
        "supported_languages": {
          "items": {
            "format": "IETF-language-tag",
            "type": "string"
          },
          "title": "Supported Languages",
          "type": "array"
        },
        "default_language": {
          "format": "IETF-language-tag",
          "type": "string"
        },
        "language_selected_next_block_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Language Selected Next Block Id"
        }
      },
      "required": [
        "block_id",
        "menu_config",
        "supported_languages",
        "default_language",
        "language_selected_next_block_id"
      ],
      "title": "LanguageSelectBlock",
      "type": "object"
    },
    "LanguageSelectionMenuConfig": {
      "properties": {
        "propmt": {
          "additionalProperties": {
            "type": "string"
          },
          "title": "Propmt",
          "type": "object"
        },
        "is_blocking": {
          "title": "Is Blocking",
          "type": "boolean"
        },
        "emoji_buttons": {
          "title": "Emoji Buttons",
          "type": "boolean"
        }
      },
      "required": [
        "propmt",
        "is_blocking",
        "emoji_buttons"
      ],
      "title": "LanguageSelectionMenuConfig",
      "type": "object"
    },
    "LoggedInUser": {
      "properties": {
        "auth_type": {
          "$ref": "#/$defs/AuthType"
        },
        "username": {
          "title": "Username",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "userpic": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Userpic"
        }
      },
      "required": [
        "auth_type",
        "username",
        "name",
        "userpic"
      ],
      "title": "LoggedInUser",
      "type": "object"
    },
    "Menu": {
      "properties": {
        "text": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "title": "Text"
        },
        "items": {
          "items": {
            "$ref": "#/$defs/MenuItem"
          },
          "title": "Items",
          "type": "array"
        },
        "config": {
          "$ref": "#/$defs/MenuConfig"
        }
      },
      "required": [
        "text",
        "items",
        "config"
      ],
      "title": "Menu",
      "type": "object"
    },
    "MenuBlock": {
      "description": "Multilevel menu block powered by Telegram inline buttons",
      "properties": {
        "block_id": {
          "title": "Block Id",
          "type": "string"
        },
        "menu": {
          "$ref": "#/$defs/Menu"
        }
      },
      "required": [
        "block_id",
        "menu"
      ],
      "title": "MenuBlock",
      "type": "object"
    },
    "MenuConfig": {
      "properties": {
        "mechanism": {
          "$ref": "#/$defs/MenuMechanism"
        },
        "back_label": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Back Label"
        },
        "lock_after_termination": {
          "title": "Lock After Termination",
          "type": "boolean"
        }
      },
      "required": [
        "mechanism",
        "back_label",
        "lock_after_termination"
      ],
      "title": "MenuConfig",
      "type": "object"
    },
    "MenuItem": {
      "properties": {
        "label": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "title": "Label"
        },
        "submenu": {
          "anyOf": [
            {
              "$ref": "#/$defs/Menu"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "next_block_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Next Block Id"
        },
        "link_url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Link Url"
        }
      },
      "required": [
        "label"
      ],
      "title": "MenuItem",
      "type": "object"
    },
    "MenuMechanism": {
      "enum": [
        "inline_buttons",
        "reply_keyboard"
      ],
      "title": "MenuMechanism",
      "type": "string"
    },
    "MessagesToAdmin": {
      "properties": {
        "copied_to_user_ok": {
          "title": "Copied To User Ok",
          "type": "string"
        },
        "deleted_message_ok": {
          "title": "Deleted Message Ok",
          "type": "string"
        },
        "can_not_delete_message": {
          "title": "Can Not Delete Message",
          "type": "string"
        }
      },
      "required": [
        "copied_to_user_ok",
        "deleted_message_ok",
        "can_not_delete_message"
      ],
      "title": "MessagesToAdmin",
      "type": "object"
    },
    "MessagesToUser": {
      "properties": {
        "forwarded_to_admin_ok": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "title": "Forwarded To Admin Ok"
        },
        "throttling": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "title": "Throttling"
        }
      },
      "required": [
        "forwarded_to_admin_ok",
        "throttling"
      ],
      "title": "MessagesToUser",
      "type": "object"
    },
    "PlainTextFormFieldConfig": {
      "properties": {
        "id": {
          "title": "Id",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "prompt": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "title": "Prompt"
        },
        "is_required": {
          "title": "Is Required",
          "type": "boolean"
        },
        "result_formatting": {
          "anyOf": [
            {
              "$ref": "#/$defs/FormFieldResultFormattingOpts"
            },
            {
              "const": "auto"
            },
            {
              "type": "null"
            }
          ],
          "title": "Result Formatting"
        },
        "is_long_text": {
          "title": "Is Long Text",
          "type": "boolean"
        },
        "empty_text_error_msg": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "title": "Empty Text Error Msg"
        }
      },
      "required": [
        "id",
        "name",
        "prompt",
        "is_required",
        "result_formatting",
        "is_long_text",
        "empty_text_error_msg"
      ],
      "title": "PlainTextFormFieldConfig",
      "type": "object"
    },
    "RegexMatchEntryPoint": {
      "description": "Entrypoint matching user messages by searching a regex pattern in text",
      "properties": {
        "entrypoint_id": {
          "title": "Entrypoint Id",
          "type": "string"
        },
        "regex": {
          "title": "Regex",
          "type": "string"
        },
        "next_block_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Next Block Id"
        }
      },
      "required": [
        "entrypoint_id",
        "regex",
        "next_block_id"
      ],
      "title": "RegexMatchEntryPoint",
      "type": "object"
    },
    "SingleSelectFormFieldConfig": {
      "properties": {
        "id": {
          "title": "Id",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "prompt": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "title": "Prompt"
        },
        "is_required": {
          "title": "Is Required",
          "type": "boolean"
        },
        "result_formatting": {
          "anyOf": [
            {
              "$ref": "#/$defs/FormFieldResultFormattingOpts"
            },
            {
              "const": "auto"
            },
            {
              "type": "null"
            }
          ],
          "title": "Result Formatting"
        },
        "options": {
          "items": {
            "$ref": "#/$defs/EnumOption"
          },
          "title": "Options",
          "type": "array"
        },
        "invalid_enum_error_msg": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "title": "Invalid Enum Error Msg"
        }
      },
      "required": [
        "id",
        "name",
        "prompt",
        "is_required",
        "result_formatting",
        "options",
        "invalid_enum_error_msg"
      ],
      "title": "SingleSelectFormFieldConfig",
      "type": "object"
    },
    "TgBotCommand": {
      "properties": {
        "command": {
          "title": "Command",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "type": "string"
        }
      },
      "required": [
        "command",
        "description"
      ],
      "title": "TgBotCommand",
      "type": "object"
    },
    "TgBotUser": {
      "description": "Info on telegram bot, combining info from several Bot API endpoints",
      "properties": {
        "id": {
          "title": "Id",
          "type": "integer"
        },
        "username": {
          "title": "Username",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "short_description": {
          "title": "Short Description",
          "type": "string"
        },
        "can_join_groups": {
          "title": "Can Join Groups",
          "type": "boolean"
        },
        "can_read_all_group_messages": {
          "title": "Can Read All Group Messages",
          "type": "boolean"
        },
        "commands": {
          "items": {
            "$ref": "#/$defs/TgBotCommand"
          },
          "title": "Commands",
          "type": "array"
        },
        "userpic": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Userpic"
        }
      },
      "required": [
        "id",
        "username",
        "name",
        "description",
        "short_description",
        "can_join_groups",
        "can_read_all_group_messages",
        "commands",
        "userpic"
      ],
      "title": "TgBotUser",
      "type": "object"
    },
    "TgBotUserUpdate": {
      "properties": {
        "name": {
          "title": "Name",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "short_description": {
          "title": "Short Description",
          "type": "string"
        }
      },
      "required": [
        "name",
        "description",
        "short_description"
      ],
      "title": "TgBotUserUpdate",
      "type": "object"
    },
    "TgGroupChat": {
      "description": "pydantic projection of https://core.telegram.org/bots/api#chat",
      "properties": {
        "id": {
          "title": "Id",
          "type": "integer"
        },
        "type": {
          "$ref": "#/$defs/TgGroupChatType"
        },
        "title": {
          "title": "Title",
          "type": "string"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Description"
        },
        "username": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Username"
        },
        "is_forum": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "title": "Is Forum"
        },
        "photo": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Photo"
        }
      },
      "required": [
        "id",
        "type",
        "title",
        "description",
        "username",
        "is_forum",
        "photo"
      ],
      "title": "TgGroupChat",
      "type": "object"
    },
    "TgGroupChatType": {
      "enum": [
        "group",
        "supergroup",
        "channel"
      ],
      "title": "TgGroupChatType",
      "type": "string"
    },
    "UserFlowBlockConfig": {
      "properties": {
        "content": {
          "anyOf": [
            {
              "$ref": "#/$defs/ContentBlock"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "human_operator": {
          "anyOf": [
            {
              "$ref": "#/$defs/HumanOperatorBlock"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "menu": {
          "anyOf": [
            {
              "$ref": "#/$defs/MenuBlock"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "form": {
          "anyOf": [
            {
              "$ref": "#/$defs/FormBlock"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "language_select": {
          "anyOf": [
            {
              "$ref": "#/$defs/LanguageSelectBlock"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "UserFlowBlockConfig",
      "type": "object"
    },
    "UserFlowConfig": {
      "properties": {
        "entrypoints": {
          "items": {
            "$ref": "#/$defs/UserFlowEntryPointConfig"
          },
          "title": "Entrypoints",
          "type": "array"
        },
        "blocks": {
          "items": {
            "$ref": "#/$defs/UserFlowBlockConfig"
          },
          "title": "Blocks",
          "type": "array"
        },
        "node_display_coords": {
          "additionalProperties": {
            "$ref": "#/$defs/UserFlowNodePosition"
          },
          "title": "Node Display Coords",
          "type": "object"
        }
      },
      "required": [
        "entrypoints",
        "blocks",
        "node_display_coords"
      ],
      "title": "UserFlowConfig",
      "type": "object"
    },
    "UserFlowEntryPointConfig": {
      "properties": {
        "command": {
          "anyOf": [
            {
              "$ref": "#/$defs/CommandEntryPoint"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "catch_all": {
          "anyOf": [
            {
              "$ref": "#/$defs/CatchAllEntryPoint"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "regex": {
          "anyOf": [
            {
              "$ref": "#/$defs/RegexMatchEntryPoint"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "UserFlowEntryPointConfig",
      "type": "object"
    },
    "UserFlowNodePosition": {
      "properties": {
        "x": {
          "title": "X",
          "type": "number"
        },
        "y": {
          "title": "Y",
          "type": "number"
        }
      },
      "required": [
        "x",
        "y"
      ],
      "title": "UserFlowNodePosition",
      "type": "object"
    }
  },
  "description": "Temporary class to pack several models into one schema; not used directly by frontend code",
  "properties": {
    "bot_config": {
      "$ref": "#/$defs/BotConfig"
    },
    "tg_group_chat": {
      "$ref": "#/$defs/TgGroupChat"
    },
    "tg_bot_user": {
      "$ref": "#/$defs/TgBotUser"
    },
    "tg_bot_user_update": {
      "$ref": "#/$defs/TgBotUserUpdate"
    },
    "language_data": {
      "$ref": "#/$defs/LanguageData"
    },
    "base_form_field_config": {
      "$ref": "#/$defs/BaseFormFieldConfig"
    },
    "logged_in_user": {
      "$ref": "#/$defs/LoggedInUser"
    },
    "bot_info": {
      "$ref": "#/$defs/BotInfo"
    }
  },
  "required": [
    "bot_config",
    "tg_group_chat",
    "tg_bot_user",
    "tg_bot_user_update",
    "language_data",
    "base_form_field_config",
    "logged_in_user",
    "bot_info"
  ],
  "title": "BackendDataModels",
  "type": "object"
}